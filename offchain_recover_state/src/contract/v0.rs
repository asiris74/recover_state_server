use ethers::abi::{decode, ParamType, Token};
use tracing::info;
use zklink_types::{AccountId, BlockNumber, H256};
use super::version::ZkLinkContractVersion;
use crate::rollup_ops::RollupOpsBlock;

fn decode_commitment_parameters(input_data: Vec<u8>) -> anyhow::Result<Vec<Token>> {
    let stored_block = ParamType::Tuple(vec![
        ParamType::Uint(32),       // uint32 blockNumber
        ParamType::Uint(64),       // uint32 priorityOperations
        ParamType::FixedBytes(32), // bytes32 pendingOnchainOperationsHash
        ParamType::Uint(256),      // uint256 timestamp
        ParamType::FixedBytes(32), // bytes32 stateHash
        ParamType::FixedBytes(32), // bytes32 commitment
        ParamType::FixedBytes(32), // bytes32 sync_hash
    ]);
    let commit_operation = ParamType::Tuple(vec![
        ParamType::FixedBytes(32), // bytes32 encoded_root,
        ParamType::Bytes,          // bytes calldata _publicData,
        ParamType::Uint(256),      // uint256 _timestamp,
        ParamType::Array(Box::new(
            ParamType::Tuple(vec![
                ParamType::Bytes,    // bytes eht_witness
                ParamType::Uint(32), //uint32 public_data_offset
            ])
        )),
        ParamType::Uint(32), // uint32 _blockNumber,
        ParamType::Uint(32) // uint32 _feeAccount,
    ]);
    decode(
        vec![stored_block, ParamType::Array(Box::new(commit_operation))].as_slice(),
        input_data.as_slice(),
    )
    .map_err(|_| {
        anyhow::Error::from(Box::new(std::io::Error::new(
            std::io::ErrorKind::NotFound,
            "can't get decoded parameters from commitment transaction",
        )))
    })
}

pub fn rollup_ops_blocks_from_bytes(data: Vec<u8>) -> anyhow::Result<Vec<RollupOpsBlock>> {
    rollup_ops_blocks_from_bytes_inner(data, ZkLinkContractVersion::V0)
}

pub(super) fn rollup_ops_blocks_from_bytes_inner(
    data: Vec<u8>,
    contract_version: ZkLinkContractVersion,
) -> anyhow::Result<Vec<RollupOpsBlock>> {
    let root_hash_argument_id = 0;
    let public_data_argument_id = 1;
    let timestamp_argument_id = 2;
    let op_block_number_argument_id = 4;
    let fee_account_argument_id = 5;

    // ID of `eth_encoded_root` in `StoredBlockInfo`.
    let previous_block_root_hash_argument_id = 4;

    let decoded_commitment_parameters = decode_commitment_parameters(data)?;
    assert_eq!(decoded_commitment_parameters.len(), 2);

    let mut previous_block_root_hash =
        if let Token::Tuple(prev_stored) = &decoded_commitment_parameters[0] {
            if let Token::FixedBytes(root_hash) =
                &prev_stored[previous_block_root_hash_argument_id]
            {
                H256::from_slice(root_hash)
            } else {
                panic!("can't parse root hash param: {:#?}", prev_stored);
            }
        } else {
            panic!(
                "can't parse root hash param: {:#?}",
                decoded_commitment_parameters
            );
        };

    // Destruct deserialized parts of transaction input data for getting operations
    // Input data consists of stored block and operations
    // Transform operations to RollupBlock
    if let Token::Array(commit_blocks) = &decoded_commitment_parameters[1] {
        let mut blocks = vec![];
        for operation in commit_blocks {
            if let Token::Tuple(operation) = operation {
                if let (
                    Token::FixedBytes(root_hash),
                    Token::Bytes(public_data),
                    Token::Uint(timestamp),
                    Token::Uint(block_number),
                    Token::Uint(fee_acc),
                ) = (
                    &operation[root_hash_argument_id],
                    &operation[public_data_argument_id],
                    &operation[timestamp_argument_id],
                    &operation[op_block_number_argument_id],
                    &operation[fee_account_argument_id],
                ) {
                    let ops = contract_version.get_rollup_ops_from_data(public_data.as_slice())?;
                    info!("Get block {block_number} successfully!");
                    blocks.push(RollupOpsBlock {
                        block_num: BlockNumber(block_number.as_u32()),
                        ops,
                        fee_account: AccountId(fee_acc.as_u32()),
                        timestamp: Some(timestamp.as_u64()),
                        previous_block_root_hash,
                        contract_version: None,
                    });

                    previous_block_root_hash = H256::from_slice(root_hash);
                } else {
                    return Err(
                        std::io::Error::new(
                            std::io::ErrorKind::NotFound,
                            "can't parse operation parameters"
                        ).into()
                    );
                }
            }
        }
        Ok(blocks)
    } else {
        Err(
            std::io::Error::new(
                std::io::ErrorKind::NotFound,
                "can't parse commitment parameters"
            ).into()
        )
    }
}

#[cfg(test)]
mod test {
    use super::*;
    #[test]
    fn test_decode_commitment() {
        let input_data = hex::decode(
            "8eda919e0000000000000000000000000000000000000000000000000000000000000b810000000000000000000000000000000000000000000000000000000000000000c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4700000000000000000000000000000000000000000000000000000000063f453df1419989d8384691ed1ee09f87a0d6bff46f9ec6051f218fdd74162249a432ace4125d3f7871d256066619752f904c8b0b96ba75993103585947b4f04b473c947eccb4b1a1bf6cefda969526ac0c06d55bd6814a7aa61a4aebc36e7766d06eda10000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000005a000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000aa003f0ae52dc68cfb5e011b71652ba5bd32e1126ea15f373fa27f6aaef4d2f0f2e00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453e000000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b820000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000f0000000f000000040c7a02bf000100340001dec5b9600a1abb91200c30ec050a0000000000000010357563d481cc0000000000000000000c57ffd9a7e4fb300000000000000308010000000e0000000f000000040c6902bf000100340001dec5b9600a1abb91200c30ec050a0000000000000010357563d481cc0000000000000000000c57fec9b788318000000000000003040000000200001200000002014a817c80021a2c00000000000000000000000000000000000008010000000f0000000f00000004048a02bf000100340001dec5b9600a1abb91200c30ec050a0000000000000010357563d481cc0000000000000000000c57fa89f6150ac00000000100000308010000000f0000000f000000040a2202bf000100340001dec5b9600a1abb91200c30ec050a0000000000000010357563d481cc0000000000000000000c57f31a638b86f00000000100000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001aec913802dbafb8aa89d032b8adc1ac3d952c06113127a82c5228d2c11ce74500000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453e200000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b830000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000f0000000f000000040a6e02bf000100340001dec5b9600a1abb91200c30ec050a0000000000000010357563d481cc0000000000000000000c57f20a732ebd400000000100000308010000000e0000000f000000040a2602bf000100340001dec5b9600a1abb91200c30ec050a0000000000000010357563d481cc0000000000000000000c57d33c38abe4500000000100000308010000000e0000000e00000004091d099200360001000122a15b400c6cc379b00c30ec050a00000000000000fbf7f52dd72fa00000000000000000000e444751b7ddb8800000000200000108010000000e0000000e000000040c29099200360001000122a15b400c6cc379b00c30ec050a00000000000000fbf7f52dd72fa00000000000000000000e4457d50cb2a3000000000000000108010000000e0000000e000000040893099200360001000122a15b400c6cc379b00c30ec050a00000000000000fbf7f52dd72fa00000000000000000000e4499e260064d000000000300000100000000000000000000000000000000000000000000000000000000000000000000000002cd4ed4bed0c1deb26b75d8b9370005941b52a861f19dfafbda9a99e72c346500000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453e400000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b840000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000f0000000e0000000405f30992003600010001f3a24ce00a6cc379b00c30ec050a0000000000000011ba095f7ad0bc0000000000000000000100fadd2c3f72c00000000600000108010000000f0000000e000000040a880992003600010001f3a24ce00a6cc379b00c30ec050a0000000000000011ba095f7ad0bc0000000000000000000100fd2ffb7d21a000000001000001040000000200001200000002014a817c80021a2c00000000000000000000000000000000000008010000000e0000000f000000040bfa08e40039000100016780e320073dde8bf80930ec050a000000000000000001ed8b01043280000000000000000012ae9ae328c352a00000000000000208010000000e0000000f00000004072a08e40039000100016780e320073dde8bf80930ec050a000000000000000001ed8b01043280000000000000000012aeb3908269eec000000004000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000023b9da4090accfaffb49d6c2c9c9e70bfedbb9cf3ff8faf716b361d0eba0c36d00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453e500000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b850000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000f0000000f000000040c3608e40039000100016780e320073dde8bf80930ec050a000000000000000001ed8b01043280000000000000000012aeb87ffabe746000000000000002040000000200001200000002014a817c80021a2c00000000000000000000000000000000000008010000000e0000000f000000040c0908e40039000100016780e320073dde8bf80930ec050a000000000000000001ed8b01043280000000000000000012aec25eeb677fa00000000000000208010000000f0000000f00000004068b08e40039000100016780e320073dde8bf80930ec050a000000000000000001ed8b01043280000000000000000012aed12d546510800000000100000208010000000e0000000f000000040c0f08e40039000100016780e320073dde8bf80930ec050a000000000000000001ed8b01043280000000000000000012aee4eb35b7270000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024d1ce2ca7ad6ddb3067740a7ebae4872b20851c7aac4724d229cf317378f5af00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453e700000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b860000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000f0000000f00000004065408e40039000100016780e320073dde8bf80930ec050a000000000000000001ed8b01043280000000000000000012aeeeca266032400000000100000208010000000e0000000f00000004093208e40039000100016780e320073dde8bf80930ec050a000000000000000001ed8b01043280000000000000000012aef3b99eb4b7e00000000200000208010000000f0000000f000000040c3408e40039000100016780e320073dde8bf80930ec050a000000000000000001ed8b01043280000000000000000012aef8a917093d800000000000000208010000000f0000000f00000004081e08e40039000100016780e320073dde8bf80930ec050a000000000000000001ed8b01043280000000000000000012af0c66f85b54000000000200000208010000000e0000000f000000040a2808e40039000100016780e320073dde8bf80930ec050a000000000000000001ed8b01043280000000000000000012af1645e9045f4000000001000002000000000000000000000000000000000000000000000000000000000000000000000000"
        )
            .expect("Failed to decode commit tx data");
        let blocks = rollup_ops_blocks_from_bytes(input_data[4..].to_vec()).unwrap();
        assert_eq!(blocks.len(), 5);
        let block = &blocks[0];
        assert_eq!(block.block_num, BlockNumber(2946));
        assert_eq!(block.fee_account, AccountId(0));
        assert_eq!(block.ops.len(), 7);

        let input_data = hex::decode(
            "8eda919e0000000000000000000000000000000000000000000000000000000000000b680000000000000000000000000000000000000000000000000000000000000000c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4700000000000000000000000000000000000000000000000000000000063f453b22178197241bc40f6ffce496ce0c5c3d36443ac158c4dd92ee984cb12e23718e6bf49f791817c872fa9a4f624b605fef76d4eaffb868f3f830901b274fdf5e2a2ed7349326ff763fd554a5d24ebaba4dd894c74c3236e23a1d042d4cdb021b9790000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000005a000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000aa012fd851dde0218428dbd090d580e5e026b438002fd5fbb16e414ac004c51276100000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453b300000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b690000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000f0000000e00000004087c03df003900010001a985e7480754c2f3a40830ec050a00000000000000000328595459bea000000000000000001e96174ad0503e580000000100000108010000000f0000000e000000040c6803df003900010001a985e7480754c2f3a40830ec050a00000000000000000328595459bea000000000000000001e9647cb0db1c9c80000000000000108010000000e0000000e000000040c3603df003900010001a985e7480754c2f3a40830ec050a00000000000000000328595459bea000000000000000001e96a0b628e49ec00000000000000108010000000e0000000e00000004017f03df003900010001a985e7480754c2f3a40830ec050a00000000000000000328595459bea000000000000000001e973236e10941100000000100000108010000000e0000000e000000040c220c51002a0001000181ca03600a72bd2b400a30ec050a0000000000000008592de812b2280000000000000000000c353283c51e4580000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d1e31809202879811ecdf53a63420dd6a08dedcd3f5f8b2c3b5758b010c450c00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453b500000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b6a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000f0000000e00000004041a0c530029000100012f7d70b0081cb810e80930ec050a000000000000000008d87fec43d58000000000000000003a97917e8f32b0600000000300000008010000000e0000000e000000040624096a002900010001bc59c60008337a71a40930ec050a00000000000000002315429b2830000000000000000000e86252e32218580000000002000002040000000200001200000002014a817c80021a2c00000000000000000000000000000000000008010000000e0000000e000000040c30096a00290001000123ddf9f008337a71a40930ec050a000000000000000006ae46bfdadf8000000000000000002c40d80b0b5a05400000000000000208010000000e0000000e000000040c38096a002900010001a520915808337a71a40930ec050a00000000000000001ec1e11b87b2c00000000000000000cbbdaf1580c8c3e00000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b66713d8e7d7ad69b9d9935efdf5f2cacef8206250aacedbb7e291110e4e30c00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453b700000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b6b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000e0000000e000000040c44096a0029000100017d701f2008337a71a40930ec050a0000000000000000175d5947a7d90000000000000000009ac5876568f16ac00000000000000208010000000e0000000f000000040c220a9a002a0001000181ca03600a2be430d80b30ec050a00000000000000011854d0f9cee40000000000000000000199edb0de5815c00000000000000108010000000f0000000e0000000409430c5c002b00010001296ec4080a7b4e9eb00930ec050a0000000000000000e5ad695078b70000000000000000001266aee85130fb400000000100000008010000000f0000000e0000000409430c6d002b00010001296ec4080a1c3af1a80a30ec050a0000000000000000ba8478cab5400000000000000000000ef17928520570000000000100000008010000000e0000000f0000000405c50c8c0038000100011d78e6240d23fa65540d30ec050a000000000000081060099a37026400000000000000000000071a4f3f142d00000000020000000000000000000000000000000000000000000000000000000000000000000000000000002560814bfe20936a1847c377a034fa70fbae39316bd413ab383c4748c840a11800000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453b900000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b6c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000e0000000f0000000400330c87002900010001916d89b808214c9bce0a30ec050a00000000000000001b168ab55915c00000000000000000b37076b9be2f6b2000000007000000040000000200001200000002014a817c80021a2c00000000000000000000000000000000000008010000000e0000000f00000004067a0c870029000100011a9b245808214c9bce0a30ec050a000000000000000004f4ac8ed94ac0000000000000000020d42c357be755000000000500000008010000000e0000000f0000000407fe0c870029000100013d1fe36008214c9bce0a30ec050a00000000000000000b62a5740dbb0000000000000000004b6bd2ee6ff4d0c00000000300000008010000000e0000000f00000004037b0c870029000100016a3170a808214c9bce0a30ec050a000000000000000013c7aecc665d4000000000000000008308211fc1de02a00000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b03e9ac18e95cdb530f87b375947eaa5b3c5dce0e7aa121f00224b2109528a600000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453ba00000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b6d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000e0000000f0000000400500c87002900010001abd3463008214c9bce0a30ec050a0000000000000000200144ae6501800000000000000000d4043de3653668200000000400000008010000000e0000000f0000000406f60c87002900010001745cf89008214c9bce0a30ec050a000000000000000015aca0d342348000000000000000008f950fa1bab296800000000100000008010000000f0000000f0000000403ef0c870029000100016b3c780808214c9bce0a30ec050a000000000000000013f96bb96938400000000000000000845237326b15e1d00000000300000008010000000e0000000f000000040bb70c870029000100017949ba7808214c9bce0a30ec050a00000000000000001697766ccddbc0000000000000000095a92e382f54dba00000000000000008010000000f0000000f000000040c420c87002900010001b66f56b008214c9bce0a30ec050a000000000000000021fb2cba0d05800000000000000000e11d50617d24ad0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
        )
            .expect("Failed to decode commit tx data");
        let blocks = rollup_ops_blocks_from_bytes(input_data[4..].to_vec()).unwrap();
        assert_eq!(blocks.len(), 5);
        let block = &blocks[0];
        assert_eq!(block.block_num, BlockNumber(2921));
        assert_eq!(block.fee_account, AccountId(0));
        assert_eq!(block.ops.len(), 5);

        let input_data = hex::decode(
            "8eda919e0000000000000000000000000000000000000000000000000000000000000b6d0000000000000000000000000000000000000000000000000000000000000000c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4700000000000000000000000000000000000000000000000000000000063f453ba0b03e9ac18e95cdb530f87b375947eaa5b3c5dce0e7aa121f00224b2109528a6cd223b2e6edeacdbdd0340e0928fb1594fdb58b1a4725954bf9fb159a0b826fe536ec2f68343289a7073d65475d4ca27b915800d869fd517c3efea651c2f886a0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000005a000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000aa02b660209f5d038dc1fc7afd9500cac1094c35cbb8e732e9dc1ddc9772e90ea0e00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453bc00000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b6e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c040000000200001200000002014a817c80021a2c00000000000000000000000000000000000008010000000e0000000f00000004039b0c870029000100015b31f28007214c9bce0a30ec050a000000000000000001b2da26c8820000000000000000000b40c6d06368d0800000000100000008010000000e0000000f0000000402d10c8700290001000172b95ab008214c9bce0a30ec050a0000000000000000155e77f119258000000000000000008d909262e116edc00000000300000008010000000e0000000f000000040bc90c870029000100017c7bfb2008214c9bce0a30ec050a0000000000000000172fdfbf6ab9000000000000000000999c0188f31116c000000000000000040000000200001200000002014a817c80021a2c00000000000000000000000000000000000008010000000e0000000f0000000401c90c8700290001000144192aa008214c9bce0a30ec050a00000000000000000caf2e284cb500000000000000000054083060a3ef62400000000100000000000000000000000000000000000000000000000000000000000000000000000000000012f8e7f6bd603af4963c04b62d1418dda363b3236d2faed229754688ca46c41a00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453be00000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b6f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000e0000000f0000000406270c870029000100018208f4a808214c9bce0a30ec050a000000000000000018388d1a5e7d400000000000000000a0762acbdf8b406000000002000000040000000200001200000002014a817c80021a2c00000000000000000000000000000000000008010000000e0000000f0000000401440c8700290001000142b295c008214c9bce0a30ec050a00000000000000000c6c63a832ee000000000000000000524df46c857cb8800000000400000008010000000e0000000f0000000407520c870029000100012d6f031008214c9bce0a30ec050a0000000000000000087671de80088000000000000000003810b262103850000000000300000008010000000e0000000f0000000404f00c87002900010001403d28f008214c9bce0a30ec050a00000000000000000bf72654f5578000000000000000004f459b362d0231c00000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d033b91c5e4562c7e24e72d0b688be348b3f89f1fac8434abe723ff6e77e3d200000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453c000000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000f0000000f0000000408340c870029000100017c7bfb2008214c9bce0a30ec050a0000000000000000172fdfbf6ab9000000000000000000999ddc67a63858c00000000100000008010000000e0000000f000000040c100c870029000100019d0ee8c008214c9bce0a30ec050a00000000000000001d411ed4d286000000000000000000c1d097d28a9736000000000000000008010000000e0000000f0000000407140c87002900010001558a450808214c9bce0a30ec050a00000000000000000feededdfaa0400000000000000000698f5070277efcd00000000200000008010000000e0000000f0000000406710c870029000100016321460808214c9bce0a30ec050a00000000000000001276e2b361a84000000000000000007a54e8c630f9cff00000000400000008010000000e0000000f0000000405340c8700290001000173467f8008214c9bce0a30ec050a00000000000000001578c233dc7c0000000000000000008e41be5532753800000000020000000000000000000000000000000000000000000000000000000000000000000000000000001ec2e9393769385d23d0c90dd8b2c4acdd67a08f7241b95a4c9783287d739aad00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453c100000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000f0000000f00000004010d0c870029000100012e1c94a808214c9bce0a30ec050a00000000000000000896c6455b7d40000000000000000038e7a76f41cc6a5000000006000000040000000200001200000002014a817c80021a2c00000000000000000000000000000000000008010000000f0000000f000000040bd90c87002900010001361efb0008214c9bce0a30ec050a00000000000000000a14b0f38cd800000000000000000042ca165f370b7c000000000000000008010000000e0000000f0000000406e70c87002900010001602284f808214c9bce0a30ec050a000000000000000011e8110381afc0000000000000000076a368f68aeb3fd000000001000000040000000200001200000002014a817c80021a2c00000000000000000000000000000000000008010000000f0000000f000000040c520c870029000100013b1aff2808214c9bce0a30ec050a00000000000000000b025e259c5140000000000000000048f101ed6d8e51c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000144f684ee7aa0fa3b8eadbfd3e0a4eb114e6f537937856d17b5279c3e078425e00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453c300000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b720000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000e0000000f00000004057d0c870029000100013278613008214c9bce0a30ec050a000000000000000009669bb602d98000000000000000003e490071bf0525e00000000500000008010000000e0000000f0000000400050c87002900010001239f08a808214c9bce0a30ec050a000000000000000006a28d6abb1d4000000000000000002bf5d6af35ef2d6000000009000000040000000200001200000002014a817c80021a2c00000000000000000000000000000000000008010000000f0000000f0000000400620c87002900010001c6e87c8808214c9bce0a30ec050a0000000000000000250cae015cdc400000000000000000f5798f7cba9aaf7000000005000000040000000200001200000002014a817c80021a2c00000000000000000000000000000000000008010000000f0000000f000000040c2b0c8700290001000178c436c808214c9bce0a30ec050a0000000000000000167e97f64c6e400000000000000000950a481fb8cd090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
        )
            .expect("Failed to decode commit tx data");
        let blocks = rollup_ops_blocks_from_bytes(input_data[4..].to_vec()).unwrap();
        assert_eq!(blocks.len(), 5);
        let block = &blocks[0];
        assert_eq!(block.block_num, BlockNumber(2926));
        assert_eq!(block.fee_account, AccountId(0));
        assert_eq!(block.ops.len(), 6);

        let input_data = hex::decode(
            "8eda919e0000000000000000000000000000000000000000000000000000000000000b720000000000000000000000000000000000000000000000000000000000000000c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4700000000000000000000000000000000000000000000000000000000063f453c3144f684ee7aa0fa3b8eadbfd3e0a4eb114e6f537937856d17b5279c3e078425e21d1436e48226ce92f0291f742b181df18c7781d7ebd1a3c360cc995180fe255a2b40dcb9b1e35fcf4becd45e60fa276ad46059d64b93b9358bea6a9c5a5e6890000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000005a000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000aa02923f9a16751869526e557de79d512b421455de210ffd0aede185270844817db00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453c500000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b730000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000e0000000f000000040b880c8700290001000163c91ec808214c9bce0a30ec050a0000000000000000129626410bae4000000000000000007b25e651972983100000000000000008010000000e0000000f0000000407210c870029000100016bbe2b2808214c9bce0a30ec050a000000000000000014119449c9b140000000000000000084f8132c7f1806a00000000200000008010000000f0000000f0000000406e30c87002900010001da56da0808214c9bce0a30ec050a000000000000000028ab3a393a484000000000000000010d761bdd3c5a5eb00000000300000008010000000f0000000e0000000401770c670028000100013b9aca00041e069d700630ec050a0000000000000000000048c27395000000000000000000001ba2d1327b65800000000200000008010000000f0000000e000000040c790c670028000100019502f900031e069d700630ec050a0000000000000000000012309ce54000000000000000000006e8b96478dc20000000000000000000000000000000000000000000000000000000000000000000000000000000000000001437d7b39fcbdfb15821e15a6febf4b0ef0bbbd3630c32e8c5189bfa56b85bbe00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453c600000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b740000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000f0000000e000000040c6e0c6700280001000162590080051e069d700630ec050a00000000000000000004b088731a80000000000000000001c80043f4cddc800000000000000008010000000e0000000e000000040c620c67002800010001df847580031e069d700630ec050a000000000000000000001b48eb57e00000000000000000000a5d251869edb80000000000000008010000000e0000000e000000040c6e0c67002800010001df847580031e069d700630ec050a000000000000000000001b48eb57e00000000000000000000a5d25e9f61be000000000000000040000000200001200000002014a817c80021a2c00000000000000000000000000000000000008010000000f0000000e00000004085f0c67002800010001bdfd63e0051e069d700630ec050a000000000000000000090f36242d6000000000000000000370ee50382aca2000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000018b8fcad9b0437b36695711b183750991e37ed7426d131057e21ce927c20ccc000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453ca00000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000f0000000f000000040c55074000350001000127b62b100b4b7971100b30ec050a000000000000001ce4dc640b8334000000000000000000002bdd06cf1721200000000000000408010000000f0000000f0000000400c2074000350001000123c346000b4b7971100b30ec050a000000000000001a055690d9db8000000000000000000000278743f2eea4000000000100000408010000000f0000000e000000040801021900360001000122a15b400c1d04eea40d30ec050a00000000000000fbf7f52dd72fa00000000000000000000e4268711bbf28000000000300000508010000000e0000000e0000000409fc021900360001000122a15b400c1d04eea40d30ec050a00000000000000fbf7f52dd72fa00000000000000000000e42dc086d9191800000000100000508010000000e0000000e000000040a10021900360001000122a15b400c1d04eea40d30ec050a00000000000000fbf7f52dd72fa00000000000000000000e432e9915ba2600000000010000050000000000000000000000000000000000000000000000000000000000000000000000001855403e6accb52f8d8b8582c08e39c7ac961b20ab64c23095b147cf3ea5583a00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453cc00000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b760000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000e0000000e000000040c2f021900360001000122a15b400c1d04eea40d30ec050a00000000000000fbf7f52dd72fa00000000000000000000e4360231438e5800000000000000508010000000f0000000e00000004077a021900360001000122a15b400c1d04eea40d30ec050a00000000000000fbf7f52dd72fa00000000000000000000e4370a6690dd0000000000400000508010000000f0000000e000000040a38021900360001000122a15b400c1d04eea40d30ec050a00000000000000fbf7f52dd72fa00000000000000000000e438129bde2ba8000000001000005040000000200001200000002014a817c80021a2c00000000000000000000000000000000000008010000000e0000000e0000000409fd021900360001000122a15b400c1d04eea40d30ec050a00000000000000fbf7f52dd72fa00000000000000000000e4391ad12b7a50000000001000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001517c51b8950a9202491817cc9f1ed4f7d503c9c14f868d7963219401c87d9f00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453ce00000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000e0000000e000000040bf402190036000100016b23ac600b1d04eea40d30ec050a000000000000004df442452643b80000000000000000000469c3839d171b800000000000000508010000000f0000000e00000004068a021900360001000122a15b400c1d04eea40d30ec050a00000000000000fbf7f52dd72fa00000000000000000000e4415c7b95ef9000000000400000508010000000f0000000e000000040c730219003600010001f3a24ce00a1d04eea40d30ec050a0000000000000011ba095f7ad0bc0000000000000000000100f06887a9dfd00000000000000508010000000e0000000f000000040c2708ae0001003a000135cb0ea00b35cb0ea00b30ec050a000000000000002723c346ae180800000000000000000000006ad5b0226f280000000000000308010000000f0000000e0000000403e70a1e003600010001f3a24ce00a3aef20b00b30ec050a0000000000000011ba095f7ad0bc0000000000000000000100f191ef48b74000000001000001000000000000000000000000000000000000000000000000000000000000000000000000"
        )
            .expect("Failed to decode commit tx data");
        let blocks = rollup_ops_blocks_from_bytes(input_data[4..].to_vec()).unwrap();
        assert_eq!(blocks.len(), 5);
        let block = &blocks[0];
        assert_eq!(block.block_num, BlockNumber(2931));
        assert_eq!(block.fee_account, AccountId(0));
        assert_eq!(block.ops.len(), 5);

        let input_data = hex::decode(
            "8eda919e0000000000000000000000000000000000000000000000000000000000000b770000000000000000000000000000000000000000000000000000000000000000c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4700000000000000000000000000000000000000000000000000000000063f453ce01517c51b8950a9202491817cc9f1ed4f7d503c9c14f868d7963219401c87d9f6636529e3a0a852fbf35188b9703e6cd8211df4f11081f1e600a91a5eef7a5941ae9224b3a289668f7515399d032d816293174ed12914a99190a582bb6436a940000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000005a000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000aa0063645f90972e97103e525272bd633575f31a25c808a215052703f7cdbc1af5c00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453cf00000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000f0000000f00000004079c0626000100290001301da85008633de2400830ec050a000000000000000008f657adabf28000000000000000003b61b8cb64c9cae00000000400000608010000000f0000000f0000000405a806260001002900011cfb961007633de2400830ec050a0000000000000000008a335809c34000000000000000000393a8e2277bcbb000000006000006040000000200001200000002014a817c80021a2c00000000000000000000000000000000000008010000000f0000000f000000040aab0626000100290001303a448808633de2400830ec050a000000000000000008fbabeba31c4000000000000000003b847dee2a705c500000000100000608010000000f0000000e000000040beb0c760001003700012173fed00b1eda54a80c30ec050a000000000000000b0130e075bc4c0000000000000000000004b0cca966dbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e5815a9016a5a680e1375c6c23541c6b909526b68331c944f7ae56ec5d8912300000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453d100000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000e0000000e0000000409cb0c760001003700012173fed00b1eda54a80c30ec050a0000000000000018572071189664000000000000000000000a5ff498bc691000000001000000040000000200001200000002014a817c80021a2c00000000000000000000000000000000000008010000000e0000000e000000040a5d03540001002900011da36ed008b0dca4500830ec050a0000000000000000058544fe0ba680000000000000000024935a22cf9665000000000100000608010000000f0000000f000000040a9a0c9f0001002a00012be430d80bb38f1a200a30ec050a000000000000000d108bff209524000000000000000000131abb1aadd3f1c00000000100000008010000000f0000000e0000000408250c780001002900014ec47d60083ddd7a880930ec050a00000000000000000eabedcc788b00000000000000000061340e54dd8cd5400000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fc529176818b1b09d9a5d405846a211c43f57d65010663c5523a2d00c60c24900000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453d300000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b7a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000f0000000e000000040a9a0c8d0001002a00012be430d80b264424800b30ec050a0000000000000011c686d0b61a9600000000000000000019fe3c2e2d841ca00000000100000008010000000f0000000e0000000408cf0c7900010028000125ec679006492a29e00630ec050a000000000000000000121553f9e820000000000000000006de632d872ec2800000000300000008010000000e0000000e000000040c550c79000100280001df84758003492a29e00630ec050a000000000000000000001b48eb57e00000000000000000000a5cffb71307400000000000000008010000000e0000000e000000040c720c7900010028000135a4e90005492a29e00630ec050a000000000000000000028ed6103d00000000000000000000f8b40f438bfec00000000000000008010000000f0000000e000000040c5a0c790001002800011aac4ee006492a29e00630ec050a0000000000000000000cb7fdb44bc0000000000000000004d498f15ae331f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a8867a2f9dc473ef7b2f59ed2499ac6ab2a74fa1ca49064d5e1e52b3d27e5dc00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453d500000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b7b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c040000000200001200000002014a817c80021a2c00000000000000000000000000000000000008010000000e0000000e0000000401370c790001002800011dcd650005492a29e00630ec050a000000000000000000016bcc41e9000000000000000000008a2a558f4019800000000100000008010000000f0000000e00000004042702150001002a000121cda4080bf44df6300a30ec050a0000000000000002c3c465ca58ec000000000000000000040ae5acccaf628000000001000006040000000200001200000002014a817c80021a2c00000000000000000000000000000000000008010000000f0000000f000000040aaa02890001003200011fd802100c1fd802100c30ec050a00000000000000e7b1aa4360a3880000000000000000005e69d8115f9ccc800000000100000508010000000e0000000e000000040a07065a000100330001997b61c00b3545ec980d30ec050a000000000000006fac3e2da6f8b000000000000000000002d9b703a94933c0000000010000040000000000000000000000000000000000000000000000000000000000000000000000001b8ddecf10acc84ffd974d0b83f98c5a4064b6bb2ee8a0fa66b52b3e9f22da2500000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000063f453d600000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000b7c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017c08010000000e0000000e00000004093e065a00010033000191494c600b3545ec980d30ec050a0000000000000069b5afac750bb800000000000000000002b2b206e20e79a00000000200000408010000000e0000000e000000040594065a0001003300011e7af6980c3545ec980d30ec050a000000000000006cbed7a3c1a99800000000000000000002c66b5ef5fa86a00000000400000408010000000f0000000e00000004022e065a0001003300011e7af6980c3545ec980d30ec050a00000000000000ddc607a8f3fb0c00000000000000000005a8d1042664e25000000008000004040000000200001200000002014a817c80021a2c00000000000000000000000000000000000008010000000e0000000e000000040c4f065a0001003300011aae37280c3545ec980d30ec050a00000000000000c2205baf0c81d400000000000000000004f426d3a6341d60000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
        )
            .expect("Failed to decode commit tx data");
        let blocks = rollup_ops_blocks_from_bytes(input_data[4..].to_vec()).unwrap();
        assert_eq!(blocks.len(), 5);
        let block = &blocks[0];
        assert_eq!(block.block_num, BlockNumber(2936));
        assert_eq!(block.fee_account, AccountId(0));
        assert_eq!(block.ops.len(), 7);
    }
}
